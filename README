# Проєкт: Нормалізація БД та ER-діаграма

Ласкаво просимо до мого репозиторію, де зібрано файли та пояснення щодо нормалізації бази даних і побудови ER-діаграми. Проєкт складається з кількох кроків (завдань), кожен із яких описано в окремому Markdown-файлі.

---

## Структура репозиторію

- [**01_FirstNormalForm.md**](./01_FirstNormalForm.md)  
  Опис переходу вихідної (початкової) таблиці в **1НФ** (перша нормальна форма).

- [**02_SecondNormalForm.md**](./02_SecondNormalForm.md)  
  Детальний розбір переходу до **2НФ** (друга нормальна форма).

- [**03_ThirdNormalForm.md**](./03_ThirdNormalForm.md)  
  Пояснення, як отримати **3НФ** (третя нормальна форма) з остаточною логікою розбиття таблиць.

- [**04_ER_diogram.md**](./04_ER_diogram.md)  
  - Містить **ER-діаграму** (зображення).  

- [**05_DB_tables.md**](./05_DB_tables.md)  
  - Приклад SQL-скриптів для створення таблиць (якщо винесено в окремий файл).  
  - Можливі додаткові коментарі щодо налаштування.

- [**images/**](./images/)  
  У цій теці зберігаються зображення (ER-діаграми, скріншоти тощо), які використовуються у `.md` файлах.

---

## Короткий зміст

1. **Вихідна таблиця**  
   - Дані про замовлення, клієнтів, товари тощо в одному місці (не в 1НФ).  
2. **1НФ**  
   - Розбиття даних на більш атомарні таблиці, відсутність багатозначних полів.  
3. **2НФ**  
   - Відсутність часткових залежностей (особливо якщо є складений ключ).  
4. **3НФ**  
   - Усунення транзитивних залежностей, винесення сутностей на окремі таблиці.  
5. **ER-діаграма**  
   - Візуальне відображення сутностей та зв’язків.

---

## Запуск та використання

1. **Клонувати репозиторій**  
   ```bash
   git clone https://github.com/your-username/your-repo.git
